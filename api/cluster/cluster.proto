syntax = "proto3";

package cluster;

option go_package = "api/cluster";
option java_multiple_files = true;
option java_outer_classname = "ClusterApi";
option java_package = "com.cluster.api";

import "google/protobuf/duration.proto";
//import "google/rpc/status.proto";

// The cluster service definition.
service ClusterService {
  rpc HealthCheck(HealthCheckRequest) returns (stream HealthCheckProgress);

}

message HealthCheckRequest {
    google.protobuf.Duration wait_timeout = 1;
    ClusterInfo cluster_info = 2;
}

message ClusterInfo {
  repeated string control_plane_nodes  = 1;
  repeated string worker_nodes = 2;
  string force_endpoint = 3;
}

message HealthCheckProgress {
  Metadata metadata = 1;
  string message = 2;
}

// Common metadata message nested in all reply message types
message Metadata {
    // hostname of the server response comes from (injected by proxy)
    string hostname = 1;
    // error is set if request failed to the upstream (rest of response is
    // undefined)
    string error = 2;
    // error as gRPC Status
    //google.rpc.Status status = 3;
  }